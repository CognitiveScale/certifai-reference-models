####################################################
## Build container
####################################################

FROM c12e/certifai:base-build AS build

COPY artifacts/packages/cortex-certifai-reference-model-server-*.zip \
       /tmp/

RUN conda run -n certifai pip install --no-cache-dir --upgrade pip
RUN conda run -n certifai pip install --no-cache-dir \
     $(find /tmp -name cortex-certifai-reference-model-server-*.zip)

# Use conda-pack to save the conda env in a standalone environment (/venv).
# NOTE: The environment must be in the same path in the runtime container.
RUN conda-pack -n certifai --ignore-missing-files -o /tmp/env.tar && \
  mkdir /venv && \
  cd /venv && tar xf /tmp/env.tar && \
  rm /tmp/env.tar

# 'Un-pack the environment' - i.e. fix the path prefixes in the environment, so the environment is
# equivalent to having been installed at /venv.
RUN  /venv/bin/conda-unpack

####################################################
## Runtime container
####################################################

FROM c12e/certifai:base-runtime AS runtime

LABEL release=1 \
  name="cortex-certifai-reference-models-server" \
  vendor="CognitiveScale" \
  version=1 \
  summary="Cortex Certifai Reference Model Server" \
  description="Reference Model Server for Cognitive Scale's Cortex Certifai" \
  com.cognitivescale.license_terms="https://www.cognitivescale.com/legal-information/"

# Copy the python environment from the build stage
COPY --from=build /venv /venv

# Activate the python env in the .bashrc and so python, pip, certifai, etc. are available when running the container
RUN echo 'source /venv/bin/activate' >> ~/.bashrc
SHELL ["/bin/bash", "--login", "-c"]

COPY licenses /licenses

USER root
RUN mkdir -p /app && chown -R 1001 /app
USER 1001

WORKDIR /app

EXPOSE 5111
CMD ["startCertifaiModelServer"]
